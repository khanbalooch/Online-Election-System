@model Web_Project_Server.Models.User
@using Web_Project_Server.Models
@{
	ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("RegisterType", "Register", FormMethod.Post))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>User</h4>
		<hr />

		<div class="Image">

			<div style="float: left; border: 4px solid #ccc; padding: 5px">
				<div id="Camera" style="width:200px; height:200px;"></div>
				<div id="my_result">

				</div>

				<br>
				<input type="button" class="btn btn-default" id="openCamera" value="Take Photo">
				<input type="button" class="btn btn-default" id="takeSnap" value="Capture" />
			</div>

		</div>


		<div class="form-group">
			@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>



		<div class="form-group">
			@Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
			</div>
		</div>
		@{

			List<SelectListItem> educationlist = new List<SelectListItem>();
			educationlist.Add(new SelectListItem { Text = "Illiterate", Value = "Illiterate" });
			educationlist.Add(new SelectListItem { Text = "Matric", Value = "Metric" });
			educationlist.Add(new SelectListItem { Text = "Intermediate", Value = "Intermediate" });
			educationlist.Add(new SelectListItem { Text = "Bachlor", Value = "Bechlor" });
			educationlist.Add(new SelectListItem { Text = "Master", Value = "Master" });
			educationlist.Add(new SelectListItem { Text = "PHD", Value = "PHD" });
		}
		<div class="form-group">
			@Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Education, educationlist, "<---Select your Education--->")
				@Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
			</div>
		</div>

		@{

			List<SelectListItem> TypeList = new List<SelectListItem>();
			TypeList.Add(new SelectListItem { Text = "Candidate", Value = "Candidate" });
			TypeList.Add(new SelectListItem { Text = "Voter", Value = "Voter" });
		}
		<div class="form-group">
			@Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.UserType, TypeList, "<---Select your Education--->")
				@Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
			</div>
		</div>
		@{
			ElectionCatalog db = new ElectionCatalog();


			List<SelectListItem> listItems = new List<SelectListItem>();

			foreach (City c in db.Cities)
			{
				listItems.Add(new SelectListItem { Text = c.Name, Value = c.Name });

			}


		}
		<div class="form-group">
			@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">

				@Html.DropDownListFor(model => model.City, listItems, "Select City");
				@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.RadioButtonFor(m => m.Gender, "Male") Male
				@Html.RadioButtonFor(m => m.Gender, "FeMale") Female
				@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">


				@Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
			</div>
		</div>
		@Html.HiddenFor(model => model.PicPath, new { id = "picUri" })
		<div class="form-group">
			@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
			</div>
		</div>



		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input id="register" type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	</div>
			}

@section scripts
{
	<script src="@Url.Content("~/Scripts/webcam.js")">

	</script>
	<script type="text/javascript">

        $(document).ready(function () {
            $("#takeSnap").hide();
            $("#openCamera").click(function () {
                $("#Camera").show();
                Webcam.attach('#Camera');
                $("#my_result").hide();
                $("#takeSnap").show();
                $("#openCamera").hide();
            });

            $("#takeSnap").click(function () {

                Webcam.snap(function (data_uri) {

                    document.getElementById('my_result').innerHTML = '<img id="image" src="' + data_uri + '"/>';
                    $("#picUri").val(data_uri);
                    Webcam.reset();
                });
                $("#Camera").hide();
                $("#my_result").show();
                $("#openCamera").show();
                $("#takeSnap").hide();
            });

        });




	</script>
	@Scripts.Render("~/bundles/jqueryval")
}
Chat Conversation End
